{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Projects\\\\Alexandria\\\\client\\\\src\\\\components\\\\signup.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Axios from 'axios';\nimport { Redirect } from 'react-router-dom';\n\nfunction SignUp(props) {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [alerts, setAlerts] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(null);\n  useEffect(() => {\n    Axios.get('http://localhost:8000/checkAuthentication', {\n      withCredentials: true\n    }).then(result => {\n      // If user is logged in\n      if (result.data) {\n        setLoggedIn(true);\n      } else {\n        setLoggedIn(false);\n      }\n    });\n  });\n\n  const onSubmit = e => {\n    e.preventDefault(); // Reset the alerts on every call to the API\n\n    setAlerts([]);\n    Axios.post('http://localhost:8000/signup', {\n      email: email,\n      password: password,\n      confirmPassword: confirmPassword\n    }).then(res => {\n      setAlerts(res.data.errors); // If sign up was successful, redirect to home\n\n      if (alerts.length > 0 && alerts[0].msg === 'Succesfully created.') {\n        props.history.push('/');\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const alertsList = alerts.map(elem => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: elem.msg\n    }, elem.msg, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 51\n    }, this);\n  });\n\n  if (loggedIn == null) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (loggedIn) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/',\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        onChange: e => {\n          setEmail(e.target.value);\n        },\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 130\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        onChange: e => {\n          setPassword(e.target.value);\n        },\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 145\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"confirmPassword\",\n        placeholder: \"Confirm password\",\n        onChange: e => {\n          setConfirmPassword(e.target.value);\n        },\n        value: confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 174\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), alertsList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/login\",\n      children: \"Log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignUp, \"IvOrEPPmDP/JXvnoqusHYV3zcMo=\");\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["D:/Projects/Alexandria/client/src/components/signup.jsx"],"names":["React","useState","useEffect","Axios","Redirect","SignUp","props","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","alerts","setAlerts","loggedIn","setLoggedIn","get","withCredentials","then","result","data","onSubmit","e","preventDefault","post","res","errors","length","msg","history","push","catch","err","console","log","alertsList","map","elem","pathname","state","from","location","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport Axios from 'axios';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nfunction SignUp(props){\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [alerts, setAlerts] = useState([]);\r\n    const [loggedIn, setLoggedIn] = useState(null);\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:8000/checkAuthentication', { withCredentials: true })\r\n        .then(result => {\r\n            // If user is logged in\r\n            if(result.data){\r\n                setLoggedIn(true);          \r\n            }else{\r\n                setLoggedIn(false);\r\n            }\r\n        })\r\n    });\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        // Reset the alerts on every call to the API\r\n        setAlerts([]);\r\n\r\n        Axios.post('http://localhost:8000/signup', {email: email, password: password, confirmPassword: confirmPassword})\r\n        .then((res) => { \r\n            setAlerts(res.data.errors);\r\n            // If sign up was successful, redirect to home\r\n            if(alerts.length > 0 && alerts[0].msg === 'Succesfully created.'){\r\n                props.history.push('/');\r\n            }\r\n        })\r\n        .catch(err =>{\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    const alertsList = alerts.map(elem => {return <p key={elem.msg}>{elem.msg}</p>})\r\n    if(loggedIn == null){\r\n        return(\r\n            <h1>Loading...</h1>\r\n        )\r\n    }\r\n    if(loggedIn){\r\n        return(\r\n            <Redirect\r\n            to={{\r\n                pathname: '/',\r\n                state: { from: props.location }\r\n            }}\r\n            />\r\n        )\r\n    }\r\n    return (    \r\n        <div>              \r\n            <h1>Sign Up</h1>\r\n            <div>\r\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" onChange={(e) => {setEmail(e.target.value)}} value={email}/><br/>\r\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={(e) => {setPassword(e.target.value)}} value={password}/><br/>\r\n                <input type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm password\" onChange={(e) => {setConfirmPassword(e.target.value)}} value={confirmPassword}/><br/>\r\n                <button onClick={onSubmit}>Submit</button>\r\n                {alertsList}\r\n            </div>\r\n            <a href=\"/\">Home</a><br />\r\n            <a href=\"/login\">Log in</a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}