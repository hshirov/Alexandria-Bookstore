{"ast":null,"code":"import _slicedToArray from\"D:/Projects/Alexandria/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState,useEffect}from'react';import Axios from'axios';import{Redirect}from'react-router-dom';import{BeatLoader}from'react-spinners';import{toast}from'react-toastify';import'../css/forms.css';function SignUp(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),confirmPassword=_useState6[0],setConfirmPassword=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),alerts=_useState8[0],setAlerts=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),accountCreated=_useState10[0],setAccountCreated=_useState10[1];var _useState11=useState(null),_useState12=_slicedToArray(_useState11,2),isLoggedIn=_useState12[0],setIsLoggedIn=_useState12[1];var _useState13=useState(true),_useState14=_slicedToArray(_useState13,2),loading=_useState14[0],setLoading=_useState14[1];toast.configure();useEffect(function(){Axios.get('http://localhost:8000/api/checkAuthentication',{withCredentials:true}).then(function(result){setIsLoggedIn(result.data);setLoading(false);}).catch(function(){return props.history.push('/error');});},[props.history]);var onSubmit=function onSubmit(event){event.preventDefault();// Reset the alerts on every call to the API\nsetAlerts([]);Axios.post('http://localhost:8000/api/signup',{email:email,password:password,confirmPassword:confirmPassword}).then(function(res){var errors=res.data.errors;if(errors.length>0&&errors[0].msg==='Succesfully created'){toast.success(\"Account created successfully!\",{position:toast.POSITION.BOTTOM_RIGHT,pauseOnHover:false,autoClose:2000});setEmail('');setPassword('');setConfirmPassword('');setAccountCreated(true);}else{setAlerts(errors);}}).catch(function(){props.history.push('/error');});};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"loading-container\",children:/*#__PURE__*/_jsx(BeatLoader,{loading:true})});}if(isLoggedIn){return/*#__PURE__*/_jsx(Redirect,{to:{pathname:'/',state:{from:props.location}}});}var alertsList=alerts.map(function(elem){return/*#__PURE__*/_jsx(\"div\",{className:\"alert\",role:\"alert\",children:elem.msg},elem.msg);});return/*#__PURE__*/_jsxs(\"div\",{className:\"form-container\",children:[/*#__PURE__*/_jsxs(\"form\",{className:\"form\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"form-title\",children:\"Register as a new user\"}),/*#__PURE__*/_jsx(\"div\",{className:\"input-title\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",onChange:function onChange(e){return setEmail(e.target.value);},value:email}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"input-title\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",onChange:function onChange(e){return setPassword(e.target.value);},value:password}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"input-title\",children:\"Confirm password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"confirmPassword\",onChange:function onChange(e){return setConfirmPassword(e.target.value);},value:confirmPassword}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"submit-container\",children:/*#__PURE__*/_jsx(\"button\",{className:\"submit-button\",onClick:onSubmit,children:\"SIGN UP\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"alert-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"alert\",role:\"alert\",style:{display:accountCreated?'':'none'},children:\"Please, check your email for confirmation.\"}),alertsList]})]});}export default SignUp;","map":{"version":3,"sources":["D:/Projects/Alexandria/client/src/components/signup.jsx"],"names":["React","useState","useEffect","Axios","Redirect","BeatLoader","toast","SignUp","props","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","alerts","setAlerts","accountCreated","setAccountCreated","isLoggedIn","setIsLoggedIn","loading","setLoading","configure","get","withCredentials","then","result","data","catch","history","push","onSubmit","event","preventDefault","post","res","errors","length","msg","success","position","POSITION","BOTTOM_RIGHT","pauseOnHover","autoClose","pathname","state","from","location","alertsList","map","elem","e","target","value","display"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {BeatLoader} from 'react-spinners';\r\nimport {toast} from 'react-toastify';\r\nimport '../css/forms.css';\r\n\r\nfunction SignUp(props){\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [alerts, setAlerts] = useState([]);\r\n    const [accountCreated, setAccountCreated] = useState(false);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    toast.configure();\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:8000/api/checkAuthentication', { withCredentials: true })\r\n        .then(result => {\r\n            setIsLoggedIn(result.data);\r\n            setLoading(false);\r\n        })\r\n        .catch(() => props.history.push('/error'));\r\n    }, [props.history]);\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault()\r\n        // Reset the alerts on every call to the API\r\n        setAlerts([]);\r\n\r\n        Axios.post('http://localhost:8000/api/signup', {email: email, password: password, confirmPassword: confirmPassword})\r\n        .then((res) => { \r\n            const errors = res.data.errors;      \r\n            if(errors.length > 0 && errors[0].msg === 'Succesfully created'){\r\n                toast.success(\"Account created successfully!\", {position: toast.POSITION.BOTTOM_RIGHT, pauseOnHover: false, autoClose: 2000});\r\n                setEmail('');\r\n                setPassword('');\r\n                setConfirmPassword('');\r\n                setAccountCreated(true);\r\n            }else{\r\n                setAlerts(errors);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            props.history.push('/error');\r\n        });\r\n    }\r\n   \r\n    if(loading){\r\n        return <div className=\"loading-container\"><BeatLoader loading/></div>;\r\n    }\r\n\r\n    if(isLoggedIn){\r\n        return(\r\n            <Redirect\r\n            to={{\r\n                pathname: '/',\r\n                state: { from: props.location }\r\n            }}\r\n            />\r\n        );\r\n    }\r\n\r\n    const alertsList = alerts.map(elem => {return <div className=\"alert\" role=\"alert\" key={elem.msg}>{elem.msg}</div>});\r\n\r\n    return (    \r\n        <div className=\"form-container\">\r\n            <form className=\"form\"> \r\n                <p className=\"form-title\">Register as a new user</p>\r\n                <div className=\"input-title\">Email</div>\r\n                <input type=\"email\" name=\"email\" onChange={(e) => setEmail(e.target.value)} value={email}/><br/>\r\n                <div className=\"input-title\">Password</div>\r\n                <input type=\"password\" name=\"password\" onChange={(e) => setPassword(e.target.value)} value={password}/><br/>\r\n                <div className=\"input-title\">Confirm password</div>\r\n                <input type=\"password\" name=\"confirmPassword\" onChange={(e) => setConfirmPassword(e.target.value)} value={confirmPassword}/><br/>\r\n                <div className=\"submit-container\">\r\n                    <button className=\"submit-button\" onClick={onSubmit}>SIGN UP</button>\r\n                </div>                \r\n            </form>\r\n            <div className=\"alert-container\">\r\n                <div className=\"alert\" role=\"alert\" style={{display: accountCreated ? '' : 'none'}}>Please, check your email for confirmation.</div>\r\n                {alertsList}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}