{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Projects\\\\Alexandria\\\\client\\\\src\\\\components\\\\signup.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport { BeatLoader } from 'react-spinners';\nimport { toast } from 'react-toastify';\nimport '../css/forms.css';\n\nfunction SignUp(props) {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [alerts, setAlerts] = useState([]);\n  const [accountCreated, setAccountCreated] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(null);\n  const [loading, setLoading] = useState(true);\n  toast.configure();\n  useEffect(() => {\n    Axios.get('http://localhost:8000/api/checkAuthentication', {\n      withCredentials: true\n    }).then(result => {\n      setIsLoggedIn(result.data);\n      setLoading(false);\n    }).catch(() => props.history.push('/error'));\n  }, [props.history]);\n\n  const onSubmit = event => {\n    event.preventDefault(); // Reset the alerts on every call to the API\n\n    setAlerts([]);\n    Axios.post('http://localhost:8000/api/signup', {\n      email: email,\n      password: password,\n      confirmPassword: confirmPassword\n    }).then(res => {\n      const errors = res.data.errors;\n\n      if (errors.length > 0 && errors[0].msg === 'Succesfully created') {\n        toast.success(\"Account created successfully!\", {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          pauseOnHover: false,\n          autoClose: 2000\n        });\n        setEmail('');\n        setPassword('');\n        setConfirmPassword('');\n        setAccountCreated(true);\n      } else {\n        setAlerts(errors);\n      }\n    }).catch(() => {\n      props.history.push('/error');\n    });\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: /*#__PURE__*/_jsxDEV(BeatLoader, {\n        loading: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 51\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/',\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n  const alertsList = alerts.map(elem => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert\",\n      role: \"alert\",\n      children: elem.msg\n    }, elem.msg, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 51\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"form-title\",\n        children: \"Register as a new user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-title\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        onChange: e => setEmail(e.target.value),\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 108\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-title\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        onChange: e => setPassword(e.target.value),\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 120\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-title\",\n        children: \"Confirm password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"confirmPassword\",\n        onChange: e => setConfirmPassword(e.target.value),\n        value: confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 141\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          onClick: onSubmit,\n          children: \"SIGN UP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert\",\n        role: \"alert\",\n        style: {\n          display: accountCreated ? '' : 'none'\n        },\n        children: \"Please, check your email for confirmation.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), alertsList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignUp, \"SvX5BrcbWsnhEyww7U3yU1T7uzo=\");\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["D:/Projects/Alexandria/client/src/components/signup.jsx"],"names":["React","useState","useEffect","Axios","Redirect","BeatLoader","toast","SignUp","props","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","alerts","setAlerts","accountCreated","setAccountCreated","isLoggedIn","setIsLoggedIn","loading","setLoading","configure","get","withCredentials","then","result","data","catch","history","push","onSubmit","event","preventDefault","post","res","errors","length","msg","success","position","POSITION","BOTTOM_RIGHT","pauseOnHover","autoClose","pathname","state","from","location","alertsList","map","elem","e","target","value","display"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {BeatLoader} from 'react-spinners';\r\nimport {toast} from 'react-toastify';\r\nimport '../css/forms.css';\r\n\r\nfunction SignUp(props){\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [alerts, setAlerts] = useState([]);\r\n    const [accountCreated, setAccountCreated] = useState(false);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    toast.configure();\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:8000/api/checkAuthentication', { withCredentials: true })\r\n        .then(result => {\r\n            setIsLoggedIn(result.data);\r\n            setLoading(false);\r\n        })\r\n        .catch(() => props.history.push('/error'));\r\n    }, [props.history]);\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault()\r\n        // Reset the alerts on every call to the API\r\n        setAlerts([]);\r\n\r\n        Axios.post('http://localhost:8000/api/signup', {email: email, password: password, confirmPassword: confirmPassword})\r\n        .then((res) => { \r\n            const errors = res.data.errors;      \r\n            if(errors.length > 0 && errors[0].msg === 'Succesfully created'){\r\n                toast.success(\"Account created successfully!\", {position: toast.POSITION.BOTTOM_RIGHT, pauseOnHover: false, autoClose: 2000});\r\n                setEmail('');\r\n                setPassword('');\r\n                setConfirmPassword('');\r\n                setAccountCreated(true);\r\n            }else{\r\n                setAlerts(errors);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            props.history.push('/error');\r\n        });\r\n    }\r\n   \r\n    if(loading){\r\n        return <div className=\"loading-container\"><BeatLoader loading/></div>;\r\n    }\r\n\r\n    if(isLoggedIn){\r\n        return(\r\n            <Redirect\r\n            to={{\r\n                pathname: '/',\r\n                state: { from: props.location }\r\n            }}\r\n            />\r\n        );\r\n    }\r\n\r\n    const alertsList = alerts.map(elem => {return <div className=\"alert\" role=\"alert\" key={elem.msg}>{elem.msg}</div>});\r\n\r\n    return (    \r\n        <div className=\"form-container\">\r\n            <form className=\"form\"> \r\n                <p className=\"form-title\">Register as a new user</p>\r\n                <div className=\"input-title\">Email</div>\r\n                <input type=\"email\" name=\"email\" onChange={(e) => setEmail(e.target.value)} value={email}/><br/>\r\n                <div className=\"input-title\">Password</div>\r\n                <input type=\"password\" name=\"password\" onChange={(e) => setPassword(e.target.value)} value={password}/><br/>\r\n                <div className=\"input-title\">Confirm password</div>\r\n                <input type=\"password\" name=\"confirmPassword\" onChange={(e) => setConfirmPassword(e.target.value)} value={confirmPassword}/><br/>\r\n                <div className=\"submit-container\">\r\n                    <button className=\"submit-button\" onClick={onSubmit}>SIGN UP</button>\r\n                </div>                \r\n            </form>\r\n            <div className=\"alert-container\">\r\n                <div className=\"alert\" role=\"alert\" style={{display: accountCreated ? '' : 'none'}}>Please, check your email for confirmation.</div>\r\n                {alertsList}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}