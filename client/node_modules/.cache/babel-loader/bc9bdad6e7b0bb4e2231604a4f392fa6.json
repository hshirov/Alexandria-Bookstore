{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Projects\\\\Alexandria\\\\client\\\\src\\\\components\\\\login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport { BeatLoader } from 'react-spinners';\nimport '../css/forms.css';\n\nfunction LogIn(props) {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [alerts, setAlerts] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    Axios.get('http://localhost:8000/checkAuthentication', {\n      withCredentials: true\n    }).then(result => {\n      setIsLoggedIn(result.data);\n      setLoading(false);\n    }).catch(() => {\n      props.history.push('/error');\n    });\n  });\n\n  const onSubmit = event => {\n    event.preventDefault(); // Reset the alerts on every call to the API\n\n    setAlerts([]);\n    Axios.post('http://localhost:8000/login', {\n      email: email,\n      password: password\n    }, {\n      withCredentials: true\n    }).then(res => {\n      const errors = res.data.errors;\n\n      if (errors.length > 0 && errors[0].msg === 'Successfully Authenticated') {\n        // If login was successful, redirect to home\n        props.history.push('/'); // this updates the isLoggedIn state in the header\n\n        window.location.reload();\n      } else {\n        setAlerts(errors);\n      }\n    }).catch(() => {\n      props.history.push('/error');\n    });\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: /*#__PURE__*/_jsxDEV(BeatLoader, {\n        loading: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/',\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n  const alertsList = alerts.map(elem => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"alert\",\n      role: \"alert\",\n      children: elem.msg\n    }, elem.msg, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 51\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"form-title\",\n        children: \"Login as existing user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-title\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        onChange: e => setEmail(e.target.value),\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-title\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        onChange: e => setPassword(e.target.value),\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          onClick: onSubmit,\n          children: \"LOGIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 88\n        }, this), \"or \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => props.history.push('/signup'),\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert-container\",\n      children: alertsList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LogIn, \"BixkVjQrEvjxR6otS03Lm5nUxH8=\");\n\n_c = LogIn;\nexport default LogIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"sources":["D:/Projects/Alexandria/client/src/components/login.jsx"],"names":["React","useState","useEffect","Axios","Redirect","BeatLoader","LogIn","props","email","setEmail","password","setPassword","alerts","setAlerts","isLoggedIn","setIsLoggedIn","loading","setLoading","get","withCredentials","then","result","data","catch","history","push","onSubmit","event","preventDefault","post","res","errors","length","msg","window","location","reload","pathname","state","from","alertsList","map","elem","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {BeatLoader} from 'react-spinners';\r\nimport '../css/forms.css';\r\n\r\nfunction LogIn(props){\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [alerts, setAlerts] = useState([]);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:8000/checkAuthentication', { withCredentials: true })\r\n        .then(result => {\r\n            setIsLoggedIn(result.data);\r\n            setLoading(false);\r\n        })\r\n        .catch(() => {\r\n            props.history.push('/error');\r\n        });\r\n    });\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault()\r\n        // Reset the alerts on every call to the API\r\n        setAlerts([]);\r\n\r\n        Axios.post('http://localhost:8000/login', {email: email, password: password}, { withCredentials: true })\r\n        .then((res) => {\r\n            const errors = res.data.errors;        \r\n            if(errors.length > 0 && errors[0].msg === 'Successfully Authenticated'){\r\n                // If login was successful, redirect to home\r\n                props.history.push('/');\r\n                // this updates the isLoggedIn state in the header\r\n                window.location.reload();\r\n            }else{\r\n                setAlerts(errors);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            props.history.push('/error');\r\n        });\r\n    }\r\n\r\n    if(loading){\r\n        return(\r\n            <div className=\"loading-container\">\r\n                <BeatLoader loading/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if(isLoggedIn){\r\n        return(\r\n            <Redirect\r\n            to={{\r\n                pathname: '/',\r\n                state: { from: props.location }\r\n            }}\r\n            />\r\n        );\r\n    }\r\n\r\n    const alertsList = alerts.map(elem => {return <div class=\"alert\" role=\"alert\" key={elem.msg}>{elem.msg}</div>});\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form className=\"form\">\r\n                <p className=\"form-title\">Login as existing user</p>\r\n                <div className=\"input-title\">Email</div>\r\n                <input type=\"email\" name=\"email\" onChange={(e) => setEmail(e.target.value)} value={email}/>\r\n                <div className=\"input-title\">Password</div>\r\n                <input type=\"password\" name=\"password\" onChange={(e) => setPassword(e.target.value)} value={password}/>\r\n                <div className=\"submit-container\">\r\n                    <button className=\"submit-button\" onClick={onSubmit}>LOGIN</button><br />\r\n                    or <button onClick={() => props.history.push('/signup')}>Sign up</button>\r\n                </div>     \r\n            </form>\r\n            <div className=\"alert-container\">\r\n                {alertsList}\r\n            </div>            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LogIn;"]},"metadata":{},"sourceType":"module"}