{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Projects\\\\Alexandria\\\\client\\\\src\\\\components\\\\admin\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport { BeatLoader } from 'react-spinners';\n\nfunction AdminIndex(props) {\n  _s();\n\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    Axios.get('http://localhost:8000/checkAuthentication', {\n      withCredentials: true\n    }).then(result => {\n      if (result.data) {\n        Axios.get('http://localhost:8000/checkAdminAuthentication', {\n          withCredentials: true\n        }).then(data => {\n          setIsAdmin(result.data);\n          setLoading(false);\n        });\n      }\n    });\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: /*#__PURE__*/_jsxDEV(BeatLoader, {\n        loading: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (!isAdmin) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/',\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Admin Panel\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AdminIndex, \"6KDdLcDigPmSwSkIdwKPRNzyNvM=\");\n\n_c = AdminIndex;\nexport default AdminIndex;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminIndex\");","map":{"version":3,"sources":["D:/Projects/Alexandria/client/src/components/admin/index.jsx"],"names":["React","useState","useEffect","Axios","Redirect","BeatLoader","AdminIndex","props","isAdmin","setIsAdmin","loading","setLoading","get","withCredentials","then","result","data","pathname","state","from","location"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,UAAR,QAAyB,gBAAzB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AAAA;;AACtB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAACS,GAAN,CAAU,2CAAV,EAAuD;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAAvD,EACCC,IADD,CACMC,MAAM,IAAI;AACZ,UAAGA,MAAM,CAACC,IAAV,EAAe;AACXb,QAAAA,KAAK,CAACS,GAAN,CAAU,gDAAV,EAA4D;AAAEC,UAAAA,eAAe,EAAE;AAAnB,SAA5D,EACCC,IADD,CACME,IAAI,IAAI;AACVP,UAAAA,UAAU,CAACM,MAAM,CAACC,IAAR,CAAV;AACAL,UAAAA,UAAU,CAAC,KAAD,CAAV;AACH,SAJD;AAKH;AACJ,KATD;AAUH,GAXQ,EAWN,EAXM,CAAT;;AAaA,MAAGD,OAAH,EAAW;AACP,wBACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,OAAO;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAED,MAAG,CAACF,OAAJ,EAAY;AACR,wBACI,QAAC,QAAD;AACA,MAAA,EAAE,EAAE;AACAS,QAAAA,QAAQ,EAAE,GADV;AAEAC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEZ,KAAK,CAACa;AAAd;AAFP;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GAvCQd,U;;KAAAA,U;AAyCT,eAAeA,UAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {BeatLoader} from 'react-spinners';\r\n\r\nfunction AdminIndex(props){\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:8000/checkAuthentication', { withCredentials: true })\r\n        .then(result => {\r\n            if(result.data){\r\n                Axios.get('http://localhost:8000/checkAdminAuthentication', { withCredentials: true })\r\n                .then(data => {\r\n                    setIsAdmin(result.data);\r\n                    setLoading(false);\r\n                });\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    if(loading){\r\n        return(\r\n            <div className=\"loading-container\">\r\n                <BeatLoader loading/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if(!isAdmin){\r\n        return(\r\n            <Redirect\r\n            to={{\r\n                pathname: '/',\r\n                state: { from: props.location }\r\n            }}\r\n            />\r\n        )\r\n    }\r\n\r\n    return(\r\n        <h1>Admin Panel</h1>\r\n    );\r\n}\r\n\r\nexport default AdminIndex;"]},"metadata":{},"sourceType":"module"}